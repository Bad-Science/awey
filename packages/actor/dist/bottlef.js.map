{
  "version": 3,
  "sources": ["../bottlef.ts"],
  "sourcesContent": ["import { AnyMessage, JSONArray, Actor, DEFAULT_PREFIX, MessageKeys, Registry, send, Pid } from \"./actor\";\n\nexport type Immutable<T> = T extends AnyMessage ? Readonly<T> : never;\n\nexport const deepFreeze = <T>(source: T, freezeParent = true): Immutable<T> => {\n    if (typeof source !== 'object') return source as Immutable<T>;\n\n    if (freezeParent) Object.freeze(source)\n  \n    Object.getOwnPropertyNames(source).forEach(function(prop) {\n      if (\n        Object.prototype.hasOwnProperty.call(source as any, prop) &&\n        (source as any)[prop] !== null &&\n        (typeof (source as any)[prop] === 'object' || typeof (source as any)[prop] === 'function')\n      ) {\n        if (Object.isFrozen((source as any)[prop])) {\n          deepFreeze((source as any)[prop], false)\n        } else {\n          deepFreeze((source as any)[prop], true)\n        }\n      }\n    })\n  \n    return source as Immutable<T>\n}\n\n\nexport type Bottle<T extends AnyMessage> = Immutable<T>;\n\n\nexport function bottle<T extends AnyMessage>(data: T): Bottle<T> {\n    return deepFreeze(data);\n}\n\n\nexport type Patchable<T extends Bottle<any>> = T extends JSONArray ? never : T extends SharedArrayBuffer ? never : T;\nexport function patch<T extends Patchable<Bottle<any>>>(bot: T, update: Partial<T>): Bottle<T> {\n    if (typeof bot === 'object') {\n        return bottle(Object.assign({}, bot, update));\n    } else {\n        return bot;\n    }\n}\n\n\nconst bot = bottle({ a: 1, b: 2 });\nconst patched = patch(bot, { a: 3 });\n\nconst simpleBot = bottle(1);\nconst simplePatched = patch(simpleBot, 2);\n\nconst sb2: Bottle<number> = bottle(1);\nconst sb4: Bottle<string> = bottle('hello');\n\n// type NeedsFreezing<T> = \n// function needsFreezing(value: any): value is JSONPrimitive {\n//     if (typeof value !== 'object') return true;\n//     if (value === null) return true;\n//     if (value instanceof SharedArrayBuffer) return true;\n//     return false;\n// }\n\n\ntype Facade<T extends Actor, PREFIX extends string = DEFAULT_PREFIX> = {\n    [K in MessageKeys<T, PREFIX>]: T[K];\n};\n\nconst reg = new Registry();\n\n// const facade: Facade<Registry> = {\n//     ping: () => {\n//         // reg.ping();\n//     },\n//     _receive: (msg) => {\n//         // reg._receive(msg);\n//     },\n//     find: (key) => {\n//         // return reg.find(key);\n//     },\n//     register: (pid) => {\n//         // reg.register(pid);\n//     },\n//     unregister: (pid) => {\n//         // reg.unregister(pid);\n//     }\n// }\n\nfunction facade<T extends Actor>(actor: T, self?: Pid<any>, prefix: string = DEFAULT_PREFIX): Facade<T> {\n    const keys = Object.getOwnPropertyNames(actor);\n    const result: Partial<Facade<T>> = {};\n    keys.forEach(key => {\n        const value = actor[key];\n        if (typeof value === 'function' && key.startsWith(prefix)) {\n            result[key] = (arg: AnyMessage) => {\n                return send(actor.self, key as any, arg, {from: self, prefix});\n                // todo make send only require realm for reply: DONE?\n            };\n        }\n    });\n    return result as Facade<T>;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA+F;AAIxF,MAAM,aAAa,CAAI,QAAW,eAAe,SAAuB;AAC3E,MAAI,OAAO,WAAW;AAAU,WAAO;AAEvC,MAAI;AAAc,WAAO,OAAO,MAAM;AAEtC,SAAO,oBAAoB,MAAM,EAAE,QAAQ,SAAS,MAAM;AACxD,QACE,OAAO,UAAU,eAAe,KAAK,QAAe,IAAI,KACvD,OAAe,IAAI,MAAM,SACzB,OAAQ,OAAe,IAAI,MAAM,YAAY,OAAQ,OAAe,IAAI,MAAM,aAC/E;AACA,UAAI,OAAO,SAAU,OAAe,IAAI,CAAC,GAAG;AAC1C,mBAAY,OAAe,IAAI,GAAG,KAAK;AAAA,MACzC,OAAO;AACL,mBAAY,OAAe,IAAI,GAAG,IAAI;AAAA,MACxC;AAAA,IACF;AAAA,EACF,CAAC;AAED,SAAO;AACX;AAMO,SAAS,OAA6B,MAAoB;AAC7D,SAAO,WAAW,IAAI;AAC1B;AAIO,SAAS,MAAwCA,MAAQ,QAA+B;AAC3F,MAAI,OAAOA,SAAQ,UAAU;AACzB,WAAO,OAAO,OAAO,OAAO,CAAC,GAAGA,MAAK,MAAM,CAAC;AAAA,EAChD,OAAO;AACH,WAAOA;AAAA,EACX;AACJ;AAGA,MAAM,MAAM,OAAO,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AACjC,MAAM,UAAU,MAAM,KAAK,EAAE,GAAG,EAAE,CAAC;AAEnC,MAAM,YAAY,OAAO,CAAC;AAC1B,MAAM,gBAAgB,MAAM,WAAW,CAAC;AAExC,MAAM,MAAsB,OAAO,CAAC;AACpC,MAAM,MAAsB,OAAO,OAAO;AAe1C,MAAM,MAAM,IAAI,sBAAS;AAoBzB,SAAS,OAAwB,OAAU,MAAiB,SAAiB,6BAA2B;AACpG,QAAM,OAAO,OAAO,oBAAoB,KAAK;AAC7C,QAAM,SAA6B,CAAC;AACpC,OAAK,QAAQ,SAAO;AAChB,UAAM,QAAQ,MAAM,GAAG;AACvB,QAAI,OAAO,UAAU,cAAc,IAAI,WAAW,MAAM,GAAG;AACvD,aAAO,GAAG,IAAI,CAAC,QAAoB;AAC/B,mBAAO,mBAAK,MAAM,MAAM,KAAY,KAAK,EAAC,MAAM,MAAM,OAAM,CAAC;AAAA,MAEjE;AAAA,IACJ;AAAA,EACJ,CAAC;AACD,SAAO;AACX;",
  "names": ["bot"]
}
